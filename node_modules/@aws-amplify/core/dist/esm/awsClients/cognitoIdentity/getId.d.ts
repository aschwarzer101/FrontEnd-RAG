import { Endpoint, HttpResponse } from '@aws-amplify/core/internals/aws-client-utils';
import { GetIdCommandInput as GetIdInput, GetIdCommandOutput as GetIdOutput } from './types';
export type { GetIdInput, GetIdOutput };
/**
 * @internal
 */
export declare const getId: (config: {
    service?: string | undefined;
    endpointResolver?: (((options: import("@aws-amplify/core/internals/aws-client-utils").EndpointResolverOptions, input?: any) => Endpoint) & (({ region }: import("@aws-amplify/core/internals/aws-client-utils").EndpointResolverOptions) => {
        url: URL;
    })) | undefined;
    retryDecider?: (((response?: HttpResponse | undefined, error?: unknown) => Promise<boolean>) & ((response?: HttpResponse | undefined, error?: unknown) => Promise<boolean>)) | undefined;
    computeDelay?: ((attempt: number) => number) | undefined;
    userAgentValue?: string | undefined;
    cache?: "default" | "force-cache" | "no-cache" | "no-store" | "only-if-cached" | "reload" | undefined;
} & {
    [x: string]: unknown;
}, input: import("./types").GetIdInput) => Promise<GetIdOutput>;
